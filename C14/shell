#!/usr/bin/env python3
# Licensed under the JADIV Private License v1.0 – see LICENSE file for details.
# ubunted

import sys
import subprocess
import time
from datetime import datetime

# --- Headless flags definitions ---
FLAG_HELP       = "-hep"   in sys.argv
FLAG_3_OF       = "-3"     in sys.argv and "-of" in sys.argv
FLAG_2_OF       = "-2"     in sys.argv and "-of" in sys.argv
FLAG_1_OF       = "-1"     in sys.argv and "-of" in sys.argv
FLAG_3_ON       = "-3"     in sys.argv and "-on" in sys.argv
FLAG_2_ON       = "-2"     in sys.argv and "-on" in sys.argv
FLAG_1_ON       = "-1"     in sys.argv and "-on" in sys.argv
FLAG_JUH_GO     = "-juh"   in sys.argv and "-go" in sys.argv
FLAG_SEV_GO     = "-sever" in sys.argv and "-go" in sys.argv
FLAG_RESET_RC16 = "-rc16"  in sys.argv and "-reset" in sys.argv
FLAG_STATUS     = "-status" in sys.argv

LOG_PATH = "/home/dpv/j44softapps-socketcontrol/log.txt"

def log(msg: str, typ: str="INFO"):
    t = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    entry = f"[{t}] [{typ}] {msg}\n"
    with open(LOG_PATH, "a") as f:
        f.write(entry)

def print_help():
    help_text = """
Dostupné headless akcie:
  -hep             Vypíše túto nápovedu.
  -<n> -of        Vypne zásuvku číslo n (1,2,3).
  -<n> -on        Zapne zásuvku číslo n (1,2,3).
  -juh -go         Otevře južní střechu.
  -sever -go       Otevře severní střechu.
  -rc16 -reset     Reset RC16 zásuvku (sispmctl -r 2).
  -status          Zobrazí stav všetkých zásuviek cez sispmctl.
"""
    print(help_text.strip())

def handle_headless() -> bool:
    if FLAG_HELP:
        print_help()
        return True

    if FLAG_RESET_RC16:
        try:
            subprocess.run("sispmctl -r 2", shell=True, check=True)
            log("RC16 zásuvka resetnutá (flag -rc16 -reset)", "SUCCESS")
            print("RC16 resetnutá.")
        except Exception as e:
            log(f"Chyba pri resetovaní RC16: {e}", "ERROR")
        return True

    if FLAG_STATUS:
        try:
            out = subprocess.check_output("sispmctl -l", shell=True, text=True)
            log("Získaný stav zásuviek (flag -status)", "SUCCESS")
            print(out)
        except Exception as e:
            log(f"Chyba pri získaní statusu zásuviek: {e}", "ERROR")
        return True

    # pôvodné akcie
    if FLAG_3_OF:
        try:
            subprocess.run("sispmctl -f 3", shell=True, check=True)
            log("Zásuvka 3 vypnutá (flag -3 -of)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri vypínaní zásuvky 3: {e}", "ERROR")
        return True

    if FLAG_2_OF:
        try:
            subprocess.run("sispmctl -f 2", shell=True, check=True)
            log("Zásuvka 2 vypnutá (flag -2 -of)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri vypínaní zásuvky 2: {e}", "ERROR")
        return True

    if FLAG_1_OF:
        try:
            subprocess.run("sispmctl -f 1", shell=True, check=True)
            log("Zásuvka 1 vypnutá (flag -1 -of)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri vypínaní zásuvky 1: {e}", "ERROR")
        return True

    if FLAG_3_ON:
        try:
            subprocess.run("sispmctl -o 3", shell=True, check=True)
            log("Zásuvka 3 zapnutá (flag -3 -on)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri zapínaní zásuvky 3: {e}", "ERROR")
        return True

    if FLAG_2_ON:
        try:
            subprocess.run("sispmctl -o 2", shell=True, check=True)
            log("Zásuvka 2 zapnutá (flag -2 -on)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri zapínaní zásuvky 2: {e}", "ERROR")
        return True

    if FLAG_1_ON:
        try:
            subprocess.run("sispmctl -o 1", shell=True, check=True)
            log("Zásuvka 1 zapnutá (flag -1 -on)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri zapínaní zásuvky 1: {e}", "ERROR")
        return True

    if FLAG_JUH_GO:
        try:
            subprocess.run("usbrelay BITFT_1=1", shell=True, check=True)
            time.sleep(2)
            subprocess.run("usbrelay BITFT_1=0", shell=True, check=True)
            log("Južná strecha otvorená (flag -juh -go)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri otváraní južnej strechy: {e}", "ERROR")
        return True

    if FLAG_SEV_GO:
        try:
            subprocess.run("usbrelay BITFT_2=1", shell=True, check=True)
            time.sleep(2)
            subprocess.run("usbrelay BITFT_2=0", shell=True, check=True)
            log("Severná strecha otvorená (flag -sever -go)", "SUCCESS")
        except Exception as e:
            log(f"Chyba pri otváraní severnej strechy: {e}", "ERROR")
        return True

    return False

if __name__ == "__main__":
    if handle_headless():
        sys.exit(0)

    print("Žiadny headless flag nebol zadaný. nič sa nevykoná.")
    sys.exit(1)
